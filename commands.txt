kubectl create secret generic pegacorn-fhirplace-namenode-secrets --from-literal=keyPassword="Peg@cornK3yNM" --from-literal=truststorePassword="Peg@cornTrustSt0re" --namespace=site-a
kubectl create secret generic pegacorn-fhirplace-datanode-alpha-secrets --from-literal=keyPassword="Peg@cornK3yDSa" --from-literal=truststorePassword="Peg@cornTrustSt0re" --namespace=site-a
kubectl create secret generic pegacorn-fhirplace-datanode-beta-secrets --from-literal=keyPassword="Peg@cornK3yDSbE" --from-literal=truststorePassword="Peg@cornTrustSt0re" --namespace=site-a


# Build base image if it does not exist
# cd into 'base' folder
docker build --rm -t fhirfactory/pegacorn-base-hadoop:1.0.0 --file Dockerfile .

# Deploy Kerberos KDC server -- <Stateful set to persist podname for domain authentication>
# cd into 'kdc' folder
docker build --rm --build-arg IMAGE_BUILD_TIMESTAMP="$(date '+%Y-%m-%d %H:%M:%S')" -t pegacorn-fhirplace-kdcserver:1.0.0-snapshot --file Dockerfile .

helm upgrade pegacorn-fhirplace-kdcserver-site-a --install --namespace site-a --set serviceName=pegacorn-fhirplace-kdcserver,imagePullPolicy=Never,hostPathKeytab=/Users/yemie/dev/data/kdc-keytab,imageTag=1.0.0-snapshot,numOfPods=1 helm

# Deploy Master Node (NameNode) - <Stateful set to persist podname for domain authentication>
# cd into 'namenode' folder
docker build --rm --build-arg IMAGE_BUILD_TIMESTAMP="$(date '+%Y-%m-%d %H:%M:%S')" -t pegacorn-fhirplace-namenode:1.0.0-snapshot --file Dockerfile .

helm upgrade pegacorn-fhirplace-namenode-site-a --install --namespace site-a --set serviceName=pegacorn-fhirplace-namenode,imagePullPolicy=Never,hostPathNamenode=/Users/yemie/dev/data/hadoop-namenode,hostPathKeytab=/Users/yemie/dev/data/kdc-keytab,hostPathConfig=/Users/yemie/dev/data/certificates,clusterName=Integration,imageTag=1.0.0-snapshot,numOfPods=1 helm

======== Steps to access namenode UI over HTTPS and Kerberos authentication in the Browser ==========
# Kerberos Enabled cluster 
# To view the Namenode Web UI (https://pegacorn-fhirplace-namenode.site-a:32410) in a browser - you should get a " HTTP 401 error - authentication required ". This is expected and confirms the DFS cannot be accessed without adequate SPNEGO authentication.

# Install kerberos client on host machine (Refer to your OS requirements)
brew install krb5

# Configure krb5.conf on your machine :: /etc/krb5.conf
[libdefaults]
    default_realm = REALM.TLD
    dns_lookup_kdc = false
    dns_lookup_realm = false
    ticket_lifetime = 24h
    renew_lifetime = 7d
    forwardable = true
    rdns = false

[realms]
    REALM.TLD = {
        kdc = tcp/pegacorn-fhirplace-kdcserver.site-a:88
        admin_server = tcp/pegacorn-fhirplace-kdcserver.site-a:749
    }

[domain_realm]
    .site-a = REALM.TLD
    site-a = REALM.TLD

## To access the Namenode Web UI in browsers, we need to configure them for SPNEGO authentication::

*** Start Firefox SPNEGO setup: ***
In the address bar, type - 'about:config' and configure the settings below:
network.negotiate-auth.trusted-uris -> .site-a
network.negotiate-auth.delegation-uris -> .site-a
network.auth.use-sspi -> false  (should be false on macOS)
network.negotiate-auth.allow-non-fqdn -> true
network.negotiate-auth.gsslib -> <should be blank>
network.negotiate-auth.using-native-gsslib -> true
* Restart Firefox

After restrting Firefox to apply those settings, we need to generate the Kerberos TGT which the browser will use to request the Service ticket (HTTP)
# Kinit user keytab
kdestroy
kinit -kt ~/dev/data/kdc-keytab/user.service.keytab yemie@REALM.TLD

# Run klist to confirm the user TGT was successful. You should see similar:
klist
| Credentials cache: API:F4F81EDF-763E-44E0-93D0-7645B1B7EB36               |
|        Principal: <username>@REALM.TLD                                    |
|  Issued                Expires               Principal                    |  
| Feb 22 14:32:59 2025  Feb 23 00:32:59 2025  krbtgt/REALM.TLD@REALM.TLD    |

# In Firefox browser:
URL === 
https://pegacorn-fhirplace-namenode.site-a:32410

# Run klist again to confirm the HTTP TGS was successful. You should see similar:
klist
| Credentials cache: API:F4F81EDF-763E-44E0-93D0-7645B1B7EB36                                   |
|        Principal: <username>@REALM.TLD                                                        |
|  Issued                Expires               Principal                                        |  
| Feb 22 14:32:59 2025  Feb 23 00:32:59 2025  krbtgt/REALM.TLD@REALM.TLD                        |
| Feb 22 14:33:59 2025  Feb 23 00:33:59 2025  HTTP/pegacorn-fhirplace-namenode.site-a@REALM.TLD |
*** End Firefox SPNEGO setup: ***

*** Start Chrome SPNEGO setup: ***
# In terminal execute:
defaults write com.google.Chrome AuthServerAllowlist "*.site-a"
defaults write com.google.Chrome AuthNegotiateDelegateAllowlist "*.site-a"

# You can confirm the setting is applied in Chrome by running:
defaults read com.google.Chrome AuthServerAllowlist 
defaults read com.google.Chrome AuthNegotiateDelegateAllowlist
(They should both output *.site-a)
* Restart Chrome

# Kinit user keytab
kdestroy
kinit -kt ~/dev/data/kdc-keytab/user.service.keytab yemie@REALM.TLD

# In Chrome browser:
URL === 
https://pegacorn-fhirplace-namenode.site-a:32410

## Command when troubleshooting Chrome kerberos auth:
# /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --auth-server-whitelist="*.site-a" --auth-negotiate-delegate-whitelist="*.site-a" --enable-logging=stderr --v=1
*** End Chrome SPNEGO setup: ***

*** Start Microsoft Edge SPNEGO setup: ***
# In terminal execute:
defaults write com.microsoft.Edge AuthServerAllowlist "*.site-a"
defaults write com.microsoft.Edge AuthNegotiateDelegateAllowlist "*.site-a"

# You can confirm the setting is applied in Edge by running:
defaults read com.microsoft.Edge AuthServerAllowlist
defaults read com.microsoft.Edge AuthNegotiateDelegateAllowlist
(They should both output *.site-a)
* Restart Edge

# Kinit user keytab
kdestroy
kinit -kt ~/dev/data/kdc-keytab/user.service.keytab yemie@REALM.TLD

# In Edge browser:
URL === 
https://pegacorn-fhirplace-namenode.site-a:32410
*** End Microsoft Edge SPNEGO setup: ***

# Trigger SPNEGO authentication using curl. It does not work in Alpine based images. Works in Debian
kdestroy
kinit -kt ~/dev/data/kdc-keytab/user.service.keytab yemie@REALM.TLD
curl -L -v --negotiate -u : https://pegacorn-fhirplace-namenode.site-a:32410/

# Curl for datanodes:
curl -L -v --negotiate -u : https://pegacorn-fhirplace-datanode-alpha.site-a:32510/datanode.html
curl -L -v --negotiate -u : https://pegacorn-fhirplace-datanode-beta.site-a:32610/datanode.html

======= Alpine image error:
" Error message ::==::==> curl: option --negotiate: the installed libcurl version doesn't support this "
# Docker issue raised for SPNEGO curl in Alpine
https://github.com/curl/curl-docker/issues/51

# Some browsers e.g. Safari may require the curl command to be executed first or the cookie to be manually set if SPNEGO does not auto-negotiate.
# The likely culprit is the way macos handles WWW-Authenticate: Negotiate from localhost which impersonates our domain
# Retrieve the hadoop.auth credentials from the curl command executed on the host machine above (curl -L -v --negotiate...).
# In Safari, go to Console in Web developer tools and set cookie -- it should be similar to the below:

document.cookie="hadoop.auth=u=yemie&p=yemie@REALM.TLD&t=kerberos&e=1740174529093&s=WCdmqRrrVLiHFCBE3DTmYnarSZdqbeKJmIAvzeKrdmo=; path=/; Secure"

** Running the curl command alone may suffice as curl triggers a ticket fetch or uses a cached one, then sets the hadoop.auth cookie, which Safari might piggyback on afterward.

========================================================================================
# Datanode(s) Deployment
# Retrieve CLUSTER-IP of NameNode service
# kubectl get svc pegacorn-fhirplace-namenode -n site-a --no-headers | awk {'print $3'} <No longer required for stateful set>

# Deploy Worker Nodes (DataNodes) - <Stateful set to persist podname for domain authentication>
docker build --rm --build-arg IMAGE_BUILD_TIMESTAMP="$(date '+%Y-%m-%d %H:%M:%S')" -t pegacorn-fhirplace-datanode-alpha:1.0.0-snapshot --file Dockerfile .
helm upgrade pegacorn-fhirplace-datanode-alpha-site-a --install --namespace site-a --set serviceName=pegacorn-fhirplace-datanode-alpha,imagePullPolicy=Never,namenodeHost=pegacorn-fhirplace-namenode-0.pegacorn-fhirplace-namenode.site-a.svc.cluster.local,hostPathDatanode=/Users/yemie/dev/data/hadoop-datanode-alpha,hostPathKeytab=/Users/yemie/dev/data/kdc-keytab,hostPathConfig=/Users/yemie/dev/data/certificates,imageTag=1.0.0-snapshot,numOfPods=1 helm

docker build --rm --build-arg IMAGE_BUILD_TIMESTAMP="$(date '+%Y-%m-%d %H:%M:%S')" -t pegacorn-fhirplace-datanode-beta:1.0.0-snapshot --file Dockerfile .
helm upgrade pegacorn-fhirplace-datanode-beta-site-a --install --namespace site-a --set serviceName=pegacorn-fhirplace-datanode-beta,imagePullPolicy=Never,namenodeHost=pegacorn-fhirplace-namenode-0.pegacorn-fhirplace-namenode.site-a.svc.cluster.local,hostPathDatanode=/Users/yemie/dev/data/hadoop-datanode-beta,hostPathKeytab=/Users/yemie/dev/data/kdc-keytab,hostPathConfig=/Users/yemie/dev/data/certificates,imageTag=1.0.0-snapshot,numOfPods=1 helm

# Avoid a URL re-direct
https://pegacorn-fhirplace-datanode-alpha.site-a:32510/datanode.html
# The below is gotten if SPNEGO authentication is not configured.
" HTTP 401 error - authentication required ". This is expected and confirms the DFS cannot be accessed without adequate SPNEGO authentication.

*** Please follow the browser steps above to configure SPNEGO authentication if you have not ***

URL (datanode-alpha)===
https://pegacorn-fhirplace-datanode-alpha.site-a:32510/datanode.html


URL (datanode-beta)===
https://pegacorn-fhirplace-datanode-beta.site-a:32610/datanode.html

=============================================================================
TDL: VNC Server

docker build --rm --build-arg IMAGE_BUILD_TIMESTAMP="$(date '+%Y-%m-%d %H:%M:%S')" -t firefox-vnc-server:1.0.0-snapshot --file Dockerfile .

helm upgrade firefox-vnc-server-site-a --install --namespace site-a --set serviceName=firefox-vnc-server,imagePullPolicy=Never,imageTag=1.0.0-snapshot,basePort=30317,numOfPods=1 helm